# Development Docker Compose
# Usage: docker compose -f docker-compose.dev.yml up --build

services:
  postgres:
    image: postgres:15
    container_name: hotel_postgres_dev
    env_file:
      - .env.dev
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    container_name: hotel_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: always
    env_file:
      - .env.dev

  app:
    build:
      context: .
      target: development
    container_name: hotel_app_dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env.dev
    environment:
      NODE_ENV: dev

volumes:
  postgres_dev_data:
  redis_dev_data:
